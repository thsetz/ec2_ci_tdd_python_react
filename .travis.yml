sudo: required

services:
  - docker
  - xvfb

addons:
  apt:
    packages:
    - libgconf-2-4

env:
  DOCKER_COMPOSE_VERSION: 1.23.2
  COMMIT: ${TRAVIS_COMMIT::8}
  MAIN_REPO: https://github.com/thsetz/ec2_ci_tdd_python_react.git 
  USERS: test-driven-users
  USERS_REPO: ${MAIN_REPO}#${TRAVIS_BRANCH}:services/users
  USERS_DB: test-driven-users_db
  USERS_DB_REPO: ${MAIN_REPO}#${TRAVIS_BRANCH}:services/users/project/db
  CLIENT: test-driven-client
  CLIENT_REPO: ${MAIN_REPO}#${TRAVIS_BRANCH}:services/client
  SWAGGER: test-driven-swagger
  SWAGGER_REPO: ${MAIN_REPO}#${TRAVIS_BRANCH}:services/swagger
  EXERCISES: test-driven-exercises
  EXERCISES_REPO: ${MAIN_REPO}#${TRAVIS_BRANCH}:services/exercises
  EXERCISES_DB: test-driven-exercises_db
  EXERCISES_DB_REPO: ${MAIN_REPO}#${TRAVIS_BRANCH}:services/exercises/project/db
  SECRET_KEY: my_precious

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  - export REACT_APP_USERS_SERVICE_URL=http://127.0.0.1
  - export REACT_APP_EXERCISES_SERVICE_URL=http://127.0.0.1
  - export REACT_APP_API_GATEWAY_URL=https://80i8y8yb4k.execute-api.eu-central-1.amazonaws.com/v2/execute
  - if [[ "$TRAVIS_BRANCH" == "staging" ]];    then export LOAD_BALANCER_DNS_NAME=http://testdriven-staging-alb-846600664.eu-central-1.elb.amazonaws.com;     fi
  - if [[ "$TRAVIS_BRANCH" == "production" ]]; then export LOAD_BALANCER_DNS_NAME=http://testdriven-production-alb-1620025013.eu-central-1.elb.amazonaws.com; fi
  - npm install

script:
  - bash ./test-ci.sh $TRAVIS_BRANCH

after_success:
  - bash -x -e ./docker-push.sh
  - bash -x -e ./docker-deploy-stage.sh
  - bash -x -e ./docker-deploy-prod.sh 



# create the machine
#docker-machine create --driver amazonec2 --amazonec2-region eu-central-1  testdriven-stage 

# create the repositories
#aws ecr create-repository --repository-name test-driven-client   --amazonec2-region eu-central-1
#aws ecr create-repository --repository-name test-driven-swagger  --amazonec2-region eu-central-1
#aws ecr create-repository --repository-name test-driven-users    --amazonec2-region eu-central-1
#aws ecr create-repository --repository-name test-driven-users-db --amazonec2-region eu-central-1
